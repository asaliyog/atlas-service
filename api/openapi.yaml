openapi: 3.0.0
info:
  title: Atlas Service API
  description: |
    A comprehensive API for managing virtual machines across multiple cloud providers (AWS, Azure, GCP).
    
    ## Filtering
    The API supports standard query parameter filtering:
    - `field=value` (equals)
    - `field_ne=value` (not equals)
    - `field_gt=value` (greater than)
    - `field_gte=value` (greater than or equal)
    - `field_lt=value` (less than)
    - `field_lte=value` (less than or equal)
    - `field_contains=value` (contains substring)
    - `field_starts_with=value` (starts with)
    - `field_ends_with=value` (ends with)
    - `field_in=value1,value2` (in list)
    - `field_not_in=value1,value2` (not in list)
    - `field_is_null` (field is null)
    - `field_is_not_null` (field is not null)
    
    ## Examples
    - `/api/v1/vms?cloudType=aws`
    - `/api/v1/vms?status=running&name_contains=web`
    - `/api/v1/vms?instanceType_in=t2.micro,t2.small`
    - `/api/v1/vms?createdAt_gte=2024-01-01`
  version: 1.0.0
  contact:
    name: API Support
    email: support@atlas-service.com
servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.atlas-service.com
    description: Production server
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the service
      tags:
        - health
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-07-07T17:30:00Z"
  /api/v1/vms:
    get:
      summary: Retrieve a list of virtual machines
      description: |
        Fetches a paginated list of virtual machines across AWS EC2, GCP Compute, and Azure VMs.
        
        ## Filtering Examples
        - `cloudType=aws` - Only AWS VMs
        - `status=running` - Only running VMs
        - `name_contains=web` - VMs with "web" in the name
        - `instanceType_in=t2.micro,t2.small` - VMs with specific instance types
        - `createdAt_gte=2024-01-01` - VMs created after Jan 1, 2024
        - `cloudType=aws&status=running` - Running AWS VMs only
        
        ## Sorting Examples
        - `sortBy=name&sortOrder=asc` - Sort by name ascending
        - `sortBy=createdAt&sortOrder=desc` - Sort by creation date descending
        
        ## Pagination Examples
        - `page=1&pageSize=20` - First page with 20 items
        - `page=2&pageSize=10` - Second page with 10 items
      tags:
        - vms
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination (1-based)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Number of VMs per page (max 1000)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 20
        - name: sortBy
          in: query
          description: |
            Field to sort by. Can be any field from the VM response.
            Examples: `name`, `createdAt`, `status`, `cloudType`, `location`
          required: false
          schema:
            type: string
            default: createdAt
        - name: sortOrder
          in: query
          description: Sort order (asc or desc)
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        # Filter parameters for unified fields
        - name: cloudType
          in: query
          description: Filter by cloud provider (aws, azure, gcp)
          required: false
          schema:
            type: string
            enum: [aws, azure, gcp]
        - name: cloudType_ne
          in: query
          description: Filter by cloud provider (not equals)
          required: false
          schema:
            type: string
            enum: [aws, azure, gcp]
        - name: cloudType_in
          in: query
          description: Filter by multiple cloud providers (comma-separated)
          required: false
          schema:
            type: string
            example: "aws,azure"
        - name: status
          in: query
          description: Filter by VM status
          required: false
          schema:
            type: string
        - name: status_ne
          in: query
          description: Filter by VM status (not equals)
          required: false
          schema:
            type: string
        - name: status_in
          in: query
          description: Filter by multiple statuses (comma-separated)
          required: false
          schema:
            type: string
            example: "running,stopped"
        - name: name
          in: query
          description: Filter by VM name (exact match)
          required: false
          schema:
            type: string
        - name: name_contains
          in: query
          description: Filter by VM name (contains substring)
          required: false
          schema:
            type: string
        - name: name_starts_with
          in: query
          description: Filter by VM name (starts with)
          required: false
          schema:
            type: string
        - name: name_ends_with
          in: query
          description: Filter by VM name (ends with)
          required: false
          schema:
            type: string
        - name: location
          in: query
          description: Filter by location/region
          required: false
          schema:
            type: string
        - name: location_in
          in: query
          description: Filter by multiple locations (comma-separated)
          required: false
          schema:
            type: string
            example: "us-east-1,us-west-2"
        - name: instanceType
          in: query
          description: Filter by instance type (exact match)
          required: false
          schema:
            type: string
        - name: instanceType_in
          in: query
          description: Filter by multiple instance types (comma-separated)
          required: false
          schema:
            type: string
            example: "t2.micro,t2.small"
        - name: cloudAccountId
          in: query
          description: Filter by cloud account ID
          required: false
          schema:
            type: string
        - name: createdAt_gte
          in: query
          description: Filter by creation date (greater than or equal)
          required: false
          schema:
            type: string
            format: date-time
            example: "2024-01-01T00:00:00Z"
        - name: createdAt_lte
          in: query
          description: Filter by creation date (less than or equal)
          required: false
          schema:
            type: string
            format: date-time
            example: "2024-12-31T23:59:59Z"
      responses:
        '200':
          description: Successful response with a list of VMs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMListResponse'
              examples:
                all_vms:
                  summary: All VMs
                  value:
                    data:
                      - id: "i-1234567890abcdef0"
                        name: "web-server-01"
                        cloudType: "aws"
                        status: "running"
                        createdAt: "2025-07-07T16:54:43Z"
                        cloudAccountId: "123456789012"
                        location: "us-east-1a"
                        instanceType: "t2.micro"
                    pagination:
                      page: 1
                      pageSize: 20
                      totalItems: 30
                      totalPages: 2
                aws_vms:
                  summary: AWS VMs only
                  description: Example with cloudType=aws filter
                  value:
                    data:
                      - id: "i-1234567890abcdef0"
                        name: "web-server-01"
                        cloudType: "aws"
                        status: "running"
                        createdAt: "2025-07-07T16:54:43Z"
                        cloudAccountId: "123456789012"
                        location: "us-east-1a"
                        instanceType: "t2.micro"
                    pagination:
                      page: 1
                      pageSize: 20
                      totalItems: 10
                      totalPages: 1
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    VMListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VM'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required: [data, pagination]
    VM:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the VM (cloud provider-specific ID).
          example: i-1234567890abcdef0
        name:
          type: string
          description: Name of the VM.
          example: web-server-01
        cloudType:
          type: string
          enum: [aws, gcp, azure]
          description: The cloud provider hosting the VM.
          example: aws
        status:
          type: string
          description: Current status of the VM (e.g., running, stopped).
          example: running
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the VM was created.
          example: 2025-07-03T16:16:00Z
        cloudAccountId:
          type: string
          description: The account ID (AWS), project ID (GCP), or subscription ID (Azure).
          example: 123456789012
        location:
          type: string
          description: The region (AWS, Azure) or zone (GCP) where the VM is deployed.
          example: us-east-1
        instanceType:
          type: string
          description: The instance type or size (e.g., t2.micro, e2-standard-2, Standard_D2s_v3).
          example: t2.micro
        cloudSpecificDetails:
          oneOf:
            - $ref: '#/components/schemas/AWSDetails'
            - $ref: '#/components/schemas/GCPDetails'
            - $ref: '#/components/schemas/AzureDetails'
          discriminator:
            propertyName: cloudType
            mapping:
              aws: '#/components/schemas/AWSDetails'
              gcp: '#/components/schemas/GCPDetails'
              azure: '#/components/schemas/AzureDetails'
      required: [id, cloudType, status, createdAt, cloudAccountId, location, instanceType]
    AWSDetails:
      type: object
      properties:
        cloudType:
          type: string
          enum: [aws]
          example: aws
        vpcId:
          type: string
          description: ID of the VPC the VM is in.
          example: vpc-12345678
        subnetId:
          type: string
          description: ID of the subnet the VM is in.
          example: subnet-12345678
        securityGroupIds:
          type: array
          items:
            type: string
          description: List of security group IDs associated with the VM.
          example: [sg-12345678, sg-98765432]
        privateIpAddress:
          type: string
          description: Private IP address of the VM.
          example: 10.0.1.100
        publicIpAddress:
          type: string
          description: Public IP address of the VM, if assigned.
          example: 54.123.45.67
      required: [cloudType, vpcId, subnetId]
    GCPDetails:
      type: object
      properties:
        cloudType:
          type: string
          enum: [gcp]
          example: gcp
        machineType:
          type: string
          description: GCP-specific machine type.
          example: e2-standard-2
        network:
          type: string
          description: Name of the network the VM is in.
          example: default
        region:
          type: string
          description: The region containing the zone (e.g., us-central1).
          example: us-central1
        privateIpAddress:
          type: string
          description: Private IP address of the VM.
          example: 10.128.0.2
        publicIpAddress:
          type: string
          description: Public IP address of the VM, if assigned.
          example: 34.123.45.67
      required: [cloudType, machineType]
    AzureDetails:
      type: object
      properties:
        cloudType:
          type: string
          enum: [azure]
          example: azure
        resourceGroup:
          type: string
          description: Azure resource group containing the VM.
          example: my-resource-group
        vmSize:
          type: string
          description: Azure-specific VM size.
          example: Standard_D2s_v3
        privateIpAddress:
          type: string
          description: Private IP address of the VM.
          example: 10.0.0.4
        publicIpAddress:
          type: string
          description: Public IP address of the VM, if assigned.
          example: 52.123.45.67
      required: [cloudType, resourceGroup, vmSize]
    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: Current page number.
          example: 1
        pageSize:
          type: integer
          description: Number of items per page.
          example: 20
        totalItems:
          type: integer
          description: Total number of VMs matching the query.
          example: 100
        totalPages:
          type: integer
          description: Total number of pages.
          example: 5
      required: [page, pageSize, totalItems, totalPages]
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message describing the issue.
          example: Invalid filter parameter
      required: [message]
