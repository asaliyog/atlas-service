openapi: 3.0.3
info:
  title: Cloud Inventory API
  description: API for retrieving unified virtual machine (VM) data across AWS EC2, GCP Compute, and Azure VMs, with detailed cloud-specific fields and flexible filtering.
  version: 1.0.0
servers:
  - url: /api/v1
    description: Main API server
paths:
  /vms:
    get:
      summary: Retrieve a list of virtual machines
      description: |
        Fetches a paginated list of virtual machines across AWS EC2, GCP Compute, and Azure VMs. Supports filtering by any field (including nested fields using dot notation, e.g., `cloudSpecificDetails.vpcId`), sorting, and pagination. The `filter` parameter accepts a JSON string of filter objects with `field`, `operator`, and `value`. Supported operators: `eq` (equal), `neq` (not equal), `contains`, `lt` (less than), `gt` (greater than), `le` (less than or equal), `ge` (greater than or equal).
      operationId: getVMs
      parameters:
        - name: page
          in: query
          description: Page number for pagination (1-based).
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Number of VMs per page.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: sortBy
          in: query
          description: Field to sort by (e.g., `id`, `name`, `createdAt`, `cloudAccountId`, `location`, `instanceType`, or nested fields like `cloudSpecificDetails.vpcId`).
          required: false
          schema:
            type: string
            default: id
        - name: sortOrder
          in: query
          description: Sort order (ascending or descending).
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - name: filter
          in: query
          description: |
            A JSON string representing an array of filter objects. Each object has:
            - `field`: The field to filter on (e.g., `cloudAccountId`, `location`, `cloudSpecificDetails.vpcId`).
            - `operator`: The matching criterion (`eq`, `neq`, `contains`, `lt`, `gt`, `le`, `ge`).
            - `value`: The value to match against.
          required: false
          schema:
            type: string
          example: '[{"field":"cloudAccountId","operator":"eq","value":"123456789012"},{"field":"name","operator":"contains","value":"web"},{"field":"instanceType","operator":"eq","value":"t2.micro"}]'
      responses:
        '200':
          description: Successful response with a list of VMs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMListResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    VMListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VM'
        pagination:
          $ref: '#/components/schemas/Pagination'
      required: [data, pagination]
    VM:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the VM (cloud provider-specific ID).
          example: i-1234567890abcdef0
        name:
          type: string
          description: Name of the VM.
          example: web-server-01
        cloudType:
          type: string
          enum: [aws, gcp, azure]
          description: The cloud provider hosting the VM.
          example: aws
        status:
          type: string
          description: Current status of the VM (e.g., running, stopped).
          example: running
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the VM was created.
          example: 2025-07-03T16:16:00Z
        cloudAccountId:
          type: string
          description: The account ID (AWS), project ID (GCP), or subscription ID (Azure).
          example: 123456789012
        location:
          type: string
          description: The region (AWS, Azure) or zone (GCP) where the VM is deployed.
          example: us-east-1
        instanceType:
          type: string
          description: The instance type or size (e.g., t2.micro, e2-standard-2, Standard_D2s_v3).
          example: t2.micro
        cloudSpecificDetails:
          oneOf:
            - $ref: '#/components/schemas/AWSDetails'
            - $ref: '#/components/schemas/GCPDetails'
            - $ref: '#/components/schemas/AzureDetails'
          discriminator:
            propertyName: cloudType
            mapping:
              aws: '#/components/schemas/AWSDetails'
              gcp: '#/components/schemas/GCPDetails'
              azure: '#/components/schemas/AzureDetails'
      required: [id, cloudType, status, createdAt, cloudAccountId, location, instanceType]
    AWSDetails:
      type: object
      properties:
        cloudType:
          type: string
          enum: [aws]
          example: aws
        vpcId:
          type: string
          description: ID of the VPC the VM is in.
          example: vpc-12345678
        subnetId:
          type: string
          description: ID of the subnet the VM is in.
          example: subnet-12345678
        securityGroupIds:
          type: array
          items:
            type: string
          description: List of security group IDs associated with the VM.
          example: [sg-12345678, sg-98765432]
        privateIpAddress:
          type: string
          description: Private IP address of the VM.
          example: 10.0.1.100
        publicIpAddress:
          type: string
          description: Public IP address of the VM, if assigned.
          example: 54.123.45.67
      required: [cloudType, vpcId, subnetId]
    GCPDetails:
      type: object
      properties:
        cloudType:
          type: string
          enum: [gcp]
          example: gcp
        machineType:
          type: string
          description: GCP-specific machine type.
          example: e2-standard-2
        network:
          type: string
          description: Name of the network the VM is in.
          example: default
        region:
          type: string
          description: The region containing the zone (e.g., us-central1).
          example: us-central1
        privateIpAddress:
          type: string
          description: Private IP address of the VM.
          example: 10.128.0.2
        publicIpAddress:
          type: string
          description: Public IP address of the VM, if assigned.
          example: 34.123.45.67
      required: [cloudType, machineType]
    AzureDetails:
      type: object
      properties:
        cloudType:
          type: string
          enum: [azure]
          example: azure
        resourceGroup:
          type: string
          description: Azure resource group containing the VM.
          example: my-resource-group
        vmSize:
          type: string
          description: Azure-specific VM size.
          example: Standard_D2s_v3
        privateIpAddress:
          type: string
          description: Private IP address of the VM.
          example: 10.0.0.4
        publicIpAddress:
          type: string
          description: Public IP address of the VM, if assigned.
          example: 52.123.45.67
      required: [cloudType, resourceGroup, vmSize]
    Pagination:
      type: object
      properties:
        page:
          type: integer
          description: Current page number.
          example: 1
        pageSize:
          type: integer
          description: Number of items per page.
          example: 20
        totalItems:
          type: integer
          description: Total number of VMs matching the query.
          example: 100
        totalPages:
          type: integer
          description: Total number of pages.
          example: 5
      required: [page, pageSize, totalItems, totalPages]
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message describing the issue.
          example: Invalid filter parameter
      required: [message]
